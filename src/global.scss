@charset "UTF-8";

/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */

@import "~@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "~@ionic/angular/css/normalize.css";
@import "~@ionic/angular/css/structure.css";
@import "~@ionic/angular/css/typography.css";
@import '~@ionic/angular/css/display.css';

/* Optional CSS utils that can be commented out */
@import "~@ionic/angular/css/padding.css";
@import "~@ionic/angular/css/float-elements.css";
@import "~@ionic/angular/css/text-alignment.css";
@import "~@ionic/angular/css/text-transformation.css";
@import "~@ionic/angular/css/flex-utils.css";



*,
*::before,
*::after {
  box-sizing: border-box;
}

:where(:not(:defined)) {
  display: block;
}

:root {
  --fit-content: fit-content;
}

@supports (width: -moz-fit-content) {
  :root {
    --fit-content: -moz-fit-content;
  }
}


:root {
  color: #fff;
  font-family: Arial;
  user-select: none;
}

html, body {
  position: relative;
  width: 100vw;
  height: 100vh;
  margin: 0;
  padding: 0;
  overflow: hidden;

  background-color: #111; 
}

#app {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;

  background-color: inherit;
}


#app-content {
  position: relative;
  padding: 1rem;

  flex-grow: 1;

  min-width: 0;
  min-height: 0;

  background-color: inherit;

  overflow: auto;
}


[hidden] {
  display: none !important;
}

img, canvas, svg, picture,
video, audio,
iframe, object, embed,
input, select, textarea,
button,
progress, meter {
  display: block;
}

fieldset {
  margin: 0;
  padding: 0.6rem 0.8rem;
  border: solid 2px #c0c0c0;
}

legend {
  border: none;
  padding: 0.3em;
}

iframe {
  border: none;
}

blockquote {
  margin: 0;
}

figure {
  margin: 0;
}

source {
  display: none;
}

hr {
  border: none;
  background-color: #ccc;
  height: 0.2em;
  margin: 0.5em auto;
}


:where(
td,
details, summary,
span, a,
blockquote, q, cite,
address
li, dt, dd,
dfn,
ruby,
abbr,
bdi, bdo,
data, time,
figcaption,
p, h1, h2, h3, h4, h5, h6,
u, s,
samp,
b, strong, i, em, mark, small, ins, del, sub, sup,
pre, code, var, kbd, output
) {
  user-select: text;
}

.max-z-index {
  z-index: 2147483647;
}

img, ion-img {
  -webkit-user-drag: none;
}

.no-self-events {
  pointer-events: none;
}

.no-self-events > * {
  pointer-events: auto;
}



/* User profile picture */

.user-pic {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  outline: solid 3px #5eabb9;
  box-shadow: 0 0 10px 0 #000;
  background-color: #ddd;

  overflow: hidden;
  cursor: pointer;
}


/* Set defaults for ionic components */

:root * {
  flex-grow: 0;
  flex-shrink: 1;
  flex-basis: auto;
}

app-root,
ion-app,
ion-router-outlet {
  position: relative;
  width: 100%;
  height: 100%;
}

ion-content {
  --background: transparent;
}

ion-header ion-toolbar:first-of-type {
  --background: transparent;
}

ion-header {
  display: flex;
  height: 66px;
  padding: 0.5rem 0.8rem;
}

:root ion-title {
  flex-grow: 1;
  padding: 0;
}


ion-header, ion-item {
  background-color: #1f1f1f;
  --background: #1f1f1f;
}

ion-toolbar, ion-item {
  color: inherit;
}

ion-item {
  --inner-border-width: 0;
}

ion-img {
  object-fit: cover;
}

ion-img::part(image) {
  -webkit-user-drag: inherit;
}

ion-button {
  height: auto;

  --background: #428cff;

  font-size: 1rem;
  letter-spacing: normal;
  white-space: normal;
}

ion-button::part(native) {
  padding: 0.5em;
}

ion-fab-button {
  font-size: 3rem;
}

/* Remove defaults to allow appending other elements */

ion-menu::part(container) {
  justify-content: flex-start;
}

ion-menu-button {
  display: block;
  width: auto;
  height: auto;
  border-radius: unset;
  font-size: unset;
}

ion-menu-button::part(native) {
  padding: 0;
  overflow: visible;
}

ion-icon {
  color: #ffffff8a;
}


ion-alert h2,
ion-alert span {
  user-select: none;
}



/* Custom Theme */

ion-header {
  background-color: #3666a5;
}

#app {
  background-color: #0d2c3f;
}

ion-item {
  --background: #29485e;
}


input[type="file"]::file-selector-button {
  all: unset;
  display: block;
  background-color: #06f;
  padding: 0.4em;
  border-radius: 0.7em;
  margin-right: 1rem;
}

input[type="file"]::file-selector-button:active {
  background-color: #59f;
}



ion-textarea {
  height: 8rem;
}

ion-textarea > .textarea-wrapper,
ion-textarea > .textarea-wrapper > textarea {
  height: 100%;
}

ion-textarea > .textarea-wrapper > textarea.native-textarea.sc-ion-textarea-md {
  padding: 0;
}

ion-textarea {
  padding: 1em;
}

:root ion-input,
:root ion-textarea {
  position: relative;
  background-color: #0c4772;
  box-shadow: 0 0 0.5em 0 #1119;

  --padding-start: 1rem;
  --padding-end: 1rem;
  --padding-top: 1em;
  --padding-bottom: 1rem;

  transition: background-color 0.3s;
}

:root ion-input:focus-within,
:root ion-textarea:focus-within {
  background-color: #061e31;
}


:root ion-input::after,
:root ion-textarea::after {
  content: '';

  display: block;
  width: 0%;
  height: 2px;
  margin: auto;

  position: absolute;
  bottom: 0;
  left: auto;
  right: 0;

  background-color: #00a7af;

  transition: width 0.3s;
}

:root ion-input:focus-within::after,
:root ion-textarea:focus-within::after {
  width: 100%;
  left: 0;
  right: auto;
}

:root ion-item > ion-input,
:root ion-item > ion-input:focus-within,
:root ion-item > ion-input::after {
  all: unset;
}



/* Scrollbar */


:root {
  --scrollbar-width:  10px;
  --scrollbar-height: 5px;
  --thumb-color:             #32577b;
  --thumb-hover-color:       #1a3854;
  --thumb-active-color:      #0b1e2f;
  --thumb-box-shadow-color:  #5f93b9;

  --track-color:             #000;

  --button-color:            #1e4e80;
  --button-hover-color:      #183c63;
  --button-active-color:     #102740;
  --button-box-shadow-color: #338ed2;

  --corner-color:            #27588a;
}


::-webkit-scrollbar {
  width:  var(--scrollbar-width, 10px);
  height: var(--scrollbar-height, 5px);
  background: var(--track-color, #0b1115);
  border-radius: 10px;
}

::-webkit-scrollbar-thumb {
  background: var(--thumb-color, #32577b);
  border-radius: 10px;
  box-shadow: inset var(--thumb-box-shadow-color, #5f93b9) 0 0 5px 0;
}

::-webkit-scrollbar-thumb:hover {
  background: var(--thumb-hover-color, #1a3854);
}

::-webkit-scrollbar-thumb:active {
  background: var(--thumb-active-color, #0b1e2f);
}

::-webkit-scrollbar-button:single-button {
  width: 20px;
  height: 20px;
  background: var(--button-color, #1e4e80);
  box-shadow: inset var(--button-box-shadow-color, #338ed2) 0 0 5px 0;
}

::-webkit-scrollbar-button:hover {
  background: var(--button-hover-color, #183c63);
}

::-webkit-scrollbar-button:active {
  background: var(--button-active-color, #102740);
}


::-webkit-scrollbar-button:vertical:single-button:increment {
  border-radius: 10px 10px 0 0;
}

::-webkit-scrollbar-button:vertical:single-button:decrement {
  border-radius: 0 0 10px 10px;
}

::-webkit-scrollbar-button:horizontal:single-button:increment {
  border-radius: 10px 0 0 10px;
}

::-webkit-scrollbar-button:horizontal:single-button:decrement {
  border-radius: 0 10px 10px 0;
}

::-webkit-scrollbar-corner {
  background: var(--corner-color, #27588a);
}
